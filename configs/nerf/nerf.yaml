task: nerf
gpus: [0]
exp_name: 'nerf'
scene: 'lego'

# module path
train_dataset_module: lib.datasets.nerf.synthetic 
test_dataset_module: lib.datasets.nerf.synthetic
network_module: lib.networks.nerf.network
loss_module: lib.train.losses.nerf
evaluator_module: lib.evaluators.nerf
visualizer_module: lib.visualizers.nerf

task_arg:
    N_rays: 2048 # number of rays per training iteration
    chunk_size: 4096 # chunkify
    white_bkgd: True # use white background
    no_batching: False
    netchunk: 65536 # 1024 * 64
#    cascade_samples: [64, 128] # importance sampling, you can set it to [64] for the initial implemetation

network:
    nerf:
        W: 256 # width
        D: 8 # depth
        V_D: 1 # appearance depth?? what is it
        W_fine: 256
        D_fine: 8
        # raw net samples
        N_samples: 64
        # fine net samples
        N_importance: 128
    xyz_encoder:
        type: 'frequency' # positional encoding
        input_dim: 3
        freq: 10
    dir_encoder:
        type: 'frequency'
        input_dim: 3
        freq: 4
    # positional encoding (3D location)
    multires: 10
    # positional encoding (2D direction)
    multires_views: 4
    # set 0 for default positional encoding, -1 for none
    i_embed: 0
    use_viewdirs: True
    perturb: 1.
#    white_bkgd: True
    raw_noise_std: 0.
    # for blender dataset settings in nerf-pytorch
    near: 2.
    far: 6.
#    N_rand: 1024
    no_ndc: Ture
    lindisp: False
#    chunk: 1024 * 32

train_dataset:
    data_root: 'data/nerf_synthetic'
    split: 'train'
    input_ratio: 1. # input image ratio, you can set it to 0.5 to acclerate training
    cams: [0, -1, 1] # input cameras, you can use this variable to select training images


test_dataset:
    data_root: 'data/nerf_synthetic'
    split: 'test'
    input_ratio: 0.5
    cams: [0, -1, 100]

train:
    batch_size: 2
    lr: 5e-4
    weight_decay: 0.
    epoch: 400
    shuffle: True
    scheduler:
        type: 'exponential'
        gamma: 0.1
        decay_epochs: 1000
    num_workers: 4

test:
    batch_size: 1
    test_perturb: False
    test_raw_noise_std: 0.

ep_iter: 500
save_ep: 20
eval_ep: 20       # 10000 iterations
save_latest_ep: 5 # 2500 iterations
log_interval: 10

# new added
render_only: False
